name: Nuclear Tests CI

on:
  push:
    paths:
      - 'lapce-ai/**'
  pull_request:
    paths:
      - 'lapce-ai/**'
  workflow_dispatch: {}
  schedule:
    - cron: '0 3 * * *' # nightly

jobs:
  nuclear-linux-macos:
    name: Nuclear (Linux/macOS)
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 120
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable

      - name: Install protobuf compiler
        run: |
          if [ "$RUNNER_OS" == "Linux" ]; then
            sudo apt-get update && sudo apt-get install -y protobuf-compiler
          elif [ "$RUNNER_OS" == "macOS" ]; then
            brew install protobuf
          fi
        shell: bash
      # Skipping global build; individual test invocations below will compile what's needed

      - name: Run Nuclear Tests - Connection Bomb
        working-directory: lapce-ai
        run: |
          cargo test -p lapce-ai-rust --test nuclear_connection_bomb -- --nocapture | tee nuclear_connection_bomb.log

      - name: Run Nuclear Tests - Latency Torture
        working-directory: lapce-ai
        run: |
          cargo test -p lapce-ai-rust --test nuclear_latency_torture -- --nocapture | tee nuclear_latency_torture.log

      - name: Run Nuclear Tests - Memory Destruction
        working-directory: lapce-ai
        run: |
          cargo test -p lapce-ai-rust --test nuclear_memory_destruction -- --nocapture | tee nuclear_memory_destruction.log

      - name: Run Nuclear Tests - Memory Leak
        working-directory: lapce-ai
        run: |
          cargo test -p lapce-ai-rust --test nuclear_memory_leak -- --nocapture | tee nuclear_memory_leak.log

      - name: Run Nuclear Tests - Chaos
        working-directory: lapce-ai
        run: |
          cargo test -p lapce-ai-rust --test nuclear_chaos -- --nocapture | tee nuclear_chaos.log

      - name: Run Nuclear Suite - Aggregated
        working-directory: lapce-ai
        run: |
          cargo test -p lapce-ai-rust --test nuclear_stress_test -- --nocapture | tee nuclear_stress_test.log

      - name: Parse metrics
        working-directory: lapce-ai
        run: |
          python3 tools/parse_nuclear_metrics.py --input nuclear_connection_bomb.log --output nuclear_connection_bomb.json || true
          python3 tools/parse_nuclear_metrics.py --input nuclear_latency_torture.log --output nuclear_latency_torture.json || true
          python3 tools/parse_nuclear_metrics.py --input nuclear_memory_destruction.log --output nuclear_memory_destruction.json || true
          python3 tools/parse_nuclear_metrics.py --input nuclear_memory_leak.log --output nuclear_memory_leak.json || true
          python3 tools/parse_nuclear_metrics.py --input nuclear_chaos.log --output nuclear_chaos.json || true
          python3 tools/parse_nuclear_metrics.py --input nuclear_stress_test.log --output nuclear_stress_test.json || true

      - name: Upload metrics
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: nuclear-metrics-${{ matrix.os }}
          path: |
            lapce-ai/*.json
            lapce-ai/*.log
          if-no-files-found: warn

  nuclear-windows:
    name: Nuclear (Windows transport)
    runs-on: windows-latest
    timeout-minutes: 90
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable

      - name: Install protobuf compiler
        run: choco install protoc
        shell: bash

      # Skipping global build to avoid compiling unrelated lib unit tests

      - name: Run Windows transport nuclear tests
        shell: bash
        working-directory: lapce-ai
        run: |
          cargo test -p lapce-ai-rust --test nuclear_windows_transport -- --nocapture | tee nuclear_windows_transport.log
          cargo test -p lapce-ai-rust --test nuclear_windows_chaos -- --nocapture | tee nuclear_windows_chaos.log
          cargo test -p lapce-ai-rust --test nuclear_windows_memory -- --nocapture | tee nuclear_windows_memory.log

      - name: Parse metrics
        shell: bash
        working-directory: lapce-ai
        run: |
          python3 tools/parse_nuclear_metrics.py --input nuclear_windows_transport.log --output nuclear_windows_transport.json || true
          python3 tools/parse_nuclear_metrics.py --input nuclear_windows_chaos.log --output nuclear_windows_chaos.json || true
          python3 tools/parse_nuclear_metrics.py --input nuclear_windows_memory.log --output nuclear_windows_memory.json || true

      - name: Upload metrics
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: nuclear-metrics-windows
          path: |
            lapce-ai/*.json
            lapce-ai/*.log
          if-no-files-found: warn
