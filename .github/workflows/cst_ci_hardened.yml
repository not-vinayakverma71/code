name: CST CI Hardened

on:
  push:
    paths:
      - 'lapce-ai/CST-tree-sitter/**'
  pull_request:
    paths:
      - 'lapce-ai/CST-tree-sitter/**'

jobs:
  clippy:
    name: Clippy (deny warnings)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy
      - name: Run clippy
        working-directory: lapce-ai/CST-tree-sitter
        run: cargo clippy --all-targets --all-features -- -D warnings

  rustfmt:
    name: Rustfmt check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt
      - name: Check formatting
        working-directory: lapce-ai/CST-tree-sitter
        run: cargo fmt --all -- --check

  cargo-audit:
    name: Security audit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - name: Install cargo-audit
        run: cargo install cargo-audit
      - name: Run security audit
        working-directory: lapce-ai/CST-tree-sitter
        run: cargo audit

  cargo-deny:
    name: License and dependency check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - name: Install cargo-deny
        run: cargo install cargo-deny
      - name: Check licenses and dependencies
        working-directory: lapce-ai/CST-tree-sitter
        run: cargo deny check

  miri:
    name: Miri (unsafe code validation)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@nightly
        with:
          components: miri
      - name: Run Miri on compact module
        working-directory: lapce-ai/CST-tree-sitter
        run: |
          cargo +nightly miri test --lib compact || true
          # Miri may fail on some tree-sitter C code, but we check our Rust code

  test-coverage:
    name: Test coverage
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - name: Install tarpaulin
        run: cargo install cargo-tarpaulin
      - name: Generate coverage
        working-directory: lapce-ai/CST-tree-sitter
        run: |
          cargo tarpaulin --out Xml --output-dir coverage --timeout 300
      - name: Check coverage threshold
        working-directory: lapce-ai/CST-tree-sitter
        run: |
          COVERAGE=$(grep -oP 'line-rate="\K[0-9.]+' coverage/cobertura.xml | head -1)
          COVERAGE_PERCENT=$(echo "$COVERAGE * 100" | bc)
          echo "Coverage: ${COVERAGE_PERCENT}%"
          if (( $(echo "$COVERAGE_PERCENT < 80" | bc -l) )); then
            echo "Coverage ${COVERAGE_PERCENT}% is below 80% threshold"
            exit 1
          fi
