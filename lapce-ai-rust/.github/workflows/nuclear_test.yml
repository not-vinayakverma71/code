name: Nuclear Stress Tests

on:
  push:
    branches: [ main, develop, clean-branch ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:
    inputs:
      test_level:
        description: 'Test level to run (1-5 or all)'
        required: false
        default: 'all'

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  # Linux Nuclear Tests
  linux-nuclear:
    name: Linux Nuclear Test Suite
    runs-on: ubuntu-latest
    timeout-minutes: 240  # 4 hours max
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt, clippy
    
    - name: Cache cargo
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Increase system limits
      run: |
        # Increase shared memory limits
        sudo sysctl -w kernel.shmmax=2147483648
        sudo sysctl -w kernel.shmall=524288
        sudo sysctl -w kernel.shmmni=4096
        
        # Increase file descriptors
        ulimit -n 65536
        
        # Show system info
        echo "System Info:"
        nproc
        free -h
        df -h
    
    - name: Build IPC server
      run: cargo build --release --bin lapce_ipc_server
    
    - name: Build nuclear tests
      run: cargo build --release --bin nuclear_stress_test
    
    - name: Level 1 - Connection Bomb
      if: ${{ github.event.inputs.test_level == 'all' || github.event.inputs.test_level == '1' }}
      run: |
        echo "ðŸ”¥ Running Level 1: Connection Bomb Test"
        timeout 360 cargo test --release --bin nuclear_stress_test level_1_connection_bomb -- --nocapture
    
    - name: Level 2 - Memory Destruction
      if: ${{ github.event.inputs.test_level == 'all' || github.event.inputs.test_level == '2' }}
      run: |
        echo "ðŸ”¥ Running Level 2: Memory Destruction Test"
        timeout 120 cargo test --release --bin nuclear_stress_test level_2_memory_destruction -- --nocapture
    
    - name: Level 3 - Latency Torture
      if: ${{ github.event.inputs.test_level == 'all' || github.event.inputs.test_level == '3' }}
      run: |
        echo "ðŸ”¥ Running Level 3: Latency Torture Test"
        timeout 660 cargo test --release --bin nuclear_stress_test level_3_latency_torture -- --nocapture
    
    - name: Level 4 - Memory Leak Detection
      if: ${{ github.event.inputs.test_level == 'all' || github.event.inputs.test_level == '4' }}
      run: |
        echo "ðŸ”¥ Running Level 4: Memory Leak Detection"
        timeout 900 cargo test --release --bin nuclear_stress_test level_4_memory_leak_detection -- --nocapture
    
    - name: Level 5 - Chaos Engineering
      if: ${{ github.event.inputs.test_level == 'all' || github.event.inputs.test_level == '5' }}
      run: |
        echo "ðŸ”¥ Running Level 5: Chaos Engineering Final Boss"
        timeout 1860 cargo test --release --bin nuclear_stress_test level_5_chaos_final_boss -- --nocapture
    
    - name: Performance Report
      if: always()
      run: |
        echo "## Nuclear Test Results" >> $GITHUB_STEP_SUMMARY
        echo "Platform: Linux $(uname -r)" >> $GITHUB_STEP_SUMMARY
        echo "Rust: $(rustc --version)" >> $GITHUB_STEP_SUMMARY

  # macOS Nuclear Tests
  macos-nuclear:
    name: macOS Nuclear Test Suite
    runs-on: macos-latest
    timeout-minutes: 240
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
    
    - name: Cache cargo
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Increase system limits
      run: |
        # macOS specific limits
        sudo sysctl -w kern.sysv.shmmax=2147483648
        sudo sysctl -w kern.sysv.shmall=524288
        sudo sysctl -w kern.maxfiles=65536
        sudo sysctl -w kern.maxfilesperproc=65536
        
        ulimit -n 65536
        
        # System info
        echo "System Info:"
        sysctl -n hw.ncpu
        vm_stat
    
    - name: Build IPC server
      run: cargo build --release --bin lapce_ipc_server
    
    - name: Build nuclear tests  
      run: cargo build --release --bin nuclear_stress_test
    
    - name: Level 1 - Connection Bomb
      if: ${{ github.event.inputs.test_level == 'all' || github.event.inputs.test_level == '1' }}
      run: |
        echo "ðŸ”¥ Running Level 1: Connection Bomb Test"
        cargo test --release --bin nuclear_stress_test level_1_connection_bomb -- --nocapture
      timeout-minutes: 6
    
    - name: Level 2 - Memory Destruction
      if: ${{ github.event.inputs.test_level == 'all' || github.event.inputs.test_level == '2' }}
      run: |
        echo "ðŸ”¥ Running Level 2: Memory Destruction Test"
        cargo test --release --bin nuclear_stress_test level_2_memory_destruction -- --nocapture
      timeout-minutes: 2
    
    - name: Level 3 - Latency Torture
      if: ${{ github.event.inputs.test_level == 'all' || github.event.inputs.test_level == '3' }}
      run: |
        echo "ðŸ”¥ Running Level 3: Latency Torture Test"
        cargo test --release --bin nuclear_stress_test level_3_latency_torture -- --nocapture
      timeout-minutes: 11
    
    - name: Level 4 - Memory Leak Detection
      if: ${{ github.event.inputs.test_level == 'all' || github.event.inputs.test_level == '4' }}
      run: |
        echo "ðŸ”¥ Running Level 4: Memory Leak Detection"
        cargo test --release --bin nuclear_stress_test level_4_memory_leak_detection -- --nocapture
      timeout-minutes: 15
    
    - name: Level 5 - Chaos Engineering
      if: ${{ github.event.inputs.test_level == 'all' || github.event.inputs.test_level == '5' }}
      run: |
        echo "ðŸ”¥ Running Level 5: Chaos Engineering Final Boss"
        cargo test --release --bin nuclear_stress_test level_5_chaos_final_boss -- --nocapture
      timeout-minutes: 31

  # Windows Nuclear Tests
  windows-nuclear:
    name: Windows Nuclear Test Suite
    runs-on: windows-latest
    timeout-minutes: 240
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
    
    - name: Cache cargo
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    
    - name: System info
      run: |
        echo "System Info:"
        wmic cpu get NumberOfCores
        wmic OS get TotalVisibleMemorySize
    
    - name: Build IPC server
      run: cargo build --release --bin lapce_ipc_server
    
    - name: Build nuclear tests
      run: cargo build --release --bin nuclear_stress_test
    
    - name: Level 1 - Connection Bomb
      if: ${{ github.event.inputs.test_level == 'all' || github.event.inputs.test_level == '1' }}
      run: |
        echo "Running Level 1: Connection Bomb Test"
        cargo test --release --bin nuclear_stress_test level_1_connection_bomb -- --nocapture
      timeout-minutes: 6
    
    - name: Level 2 - Memory Destruction
      if: ${{ github.event.inputs.test_level == 'all' || github.event.inputs.test_level == '2' }}
      run: |
        echo "Running Level 2: Memory Destruction Test"
        cargo test --release --bin nuclear_stress_test level_2_memory_destruction -- --nocapture
      timeout-minutes: 2
    
    - name: Level 3 - Latency Torture
      if: ${{ github.event.inputs.test_level == 'all' || github.event.inputs.test_level == '3' }}
      run: |
        echo "Running Level 3: Latency Torture Test"
        cargo test --release --bin nuclear_stress_test level_3_latency_torture -- --nocapture
      timeout-minutes: 11
    
    - name: Level 4 - Memory Leak Detection
      if: ${{ github.event.inputs.test_level == 'all' || github.event.inputs.test_level == '4' }}
      run: |
        echo "Running Level 4: Memory Leak Detection"
        cargo test --release --bin nuclear_stress_test level_4_memory_leak_detection -- --nocapture
      timeout-minutes: 15
    
    - name: Level 5 - Chaos Engineering
      if: ${{ github.event.inputs.test_level == 'all' || github.event.inputs.test_level == '5' }}
      run: |
        echo "Running Level 5: Chaos Engineering Final Boss"
        cargo test --release --bin nuclear_stress_test level_5_chaos_final_boss -- --nocapture
      timeout-minutes: 31

  # Performance Comparison Matrix
  performance-matrix:
    name: Performance Report
    needs: [linux-nuclear, macos-nuclear, windows-nuclear]
    runs-on: ubuntu-latest
    if: always()
    
    steps:
    - name: Generate Performance Matrix
      run: |
        echo "# ðŸ”¥ Nuclear Test Results" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "## Platform Performance Matrix" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "| Platform | Level 1 | Level 2 | Level 3 | Level 4 | Level 5 |" >> $GITHUB_STEP_SUMMARY
        echo "|----------|---------|---------|---------|---------|---------|" >> $GITHUB_STEP_SUMMARY
        echo "| Linux    | ${{ needs.linux-nuclear.result }} | - | - | - | - |" >> $GITHUB_STEP_SUMMARY
        echo "| macOS    | ${{ needs.macos-nuclear.result }} | - | - | - | - |" >> $GITHUB_STEP_SUMMARY
        echo "| Windows  | ${{ needs.windows-nuclear.result }} | - | - | - | - |" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "## Success Criteria" >> $GITHUB_STEP_SUMMARY
        echo "- âœ… Memory: < 3MB" >> $GITHUB_STEP_SUMMARY
        echo "- âœ… Latency: < 10Î¼s (99th percentile)" >> $GITHUB_STEP_SUMMARY
        echo "- âœ… Throughput: > 1M messages/second" >> $GITHUB_STEP_SUMMARY
        echo "- âœ… Connections: 1000+ concurrent" >> $GITHUB_STEP_SUMMARY
        echo "- âœ… Recovery: < 100ms" >> $GITHUB_STEP_SUMMARY
