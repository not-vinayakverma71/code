name: IPC Hardened CI

on:
  push:
    paths:
      - 'lapce-ai/**'
  pull_request:
    paths:
      - 'lapce-ai/**'

jobs:
  fmt:
    name: rustfmt check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          components: rustfmt
      - name: rustfmt --check
        working-directory: lapce-ai
        run: cargo fmt --all -- --check

  clippy:
    name: clippy -D warnings
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          components: clippy
      - name: Install protobuf compiler
        run: sudo apt-get update && sudo apt-get install -y protobuf-compiler
      - name: clippy
        working-directory: lapce-ai
        run: cargo clippy --all-targets --all-features -D warnings

  tests:
    name: full test suite (Linux)
    runs-on: ubuntu-latest
    needs: [fmt, clippy]
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
      - name: Install protobuf compiler
        run: sudo apt-get update && sudo apt-get install -y protobuf-compiler
      - name: cargo test
        working-directory: lapce-ai
        env:
          RUST_BACKTRACE: 1
        run: |
          cargo test --all -- --nocapture

  audit:
    name: cargo-audit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
      - name: Install cargo-audit
        run: cargo install cargo-audit --locked
      - name: Run cargo audit
        run: cargo audit --manifest-path lapce-ai/Cargo.toml

  deny:
    name: cargo-deny
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: EmbarkStudios/cargo-deny-action@v1
        with:
          arguments: check bans licenses sources
          working-directory: lapce-ai

  miri:
    name: miri tests (nightly)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@nightly
        with:
          toolchain: nightly
          components: miri
      - name: run miri (smoke)
        working-directory: lapce-ai
        env:
          MIRIFLAGS: -Zmiri-disable-isolation
        run: |
          cargo +nightly miri test --test cross_os_success_criteria

  asan:
    name: ASan/LSan (nightly)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@nightly
        with:
          toolchain: nightly
      - name: run asan tests (smoke)
        working-directory: lapce-ai
        env:
          RUSTFLAGS: -Zsanitizer=address
          RUSTDOCFLAGS: -Zsanitizer=address
          ASAN_OPTIONS: detect_leaks=1
        run: |
          cargo +nightly test --test cross_os_success_criteria -- --nocapture
